; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!


; ************ CHANGE THESE DEFINES PER PROJECT *************

#define MyAppName "NHML-ABVR"
#define MyAppNameNoSpace "NHML-ABVR"
#define MyAppExeName "NiceHashMinerLegacy.exe"
; ALSO DON'T FORGET TO CHANGE THE GUID IN THE SETUP SECTION BELOW (has to come after the #defines)

; ********************** END CHANGE *************************

#define MyAppPublisher "Atlas Bay VR"
#define MyAppURL "https://www.atlasbayvr.com/"
#define MyAppFolder "..\\Release"
;#define MyIconPath "..\\Windows\\Application.ico"
;#define ProjectVersion ReadIni(SourcePath	+ MyAppFolder + "\\" + MyAppNameNoSpace + "\\Content\\Build\\Config\\Build.version","Inno Build Version","ProjectVersion","UNKNOWN")
;#define UE4FileVersion ReadIni(SourcePath	+ MyAppFolder + "\\" + MyAppNameNoSpace + "\\Content\\Build\\Config\\Build.version","Inno Build Version","UE4SetupFileVersion","UNKNOWN")
#define SelfFileVersion Int(ReadIni(SourcePath	+ MyAppFolder + "\\" + MyAppNameNoSpace + "\\Content\\Build\\Config\\Build.version","Inno Build Version","SetupFileVersion","0"))
#expr SelfFileVersion = SelfFileVersion + 1
;#expr WriteIni(SourcePath	+ MyAppFolder + "\\" + MyAppNameNoSpace + "\\Content\\Build\\Config\\Build.version","Inno Build Version","SetupFileVersion", SelfFileVersion)
;this isn't used currently since the executable file isn't given the correct version number
;#define MyAppVersion GetFileVersion(AddBackslash(SourcePath) + MyAppExeName) 

[Setup]
; ******************** DO THIS PER PROJECT *********************
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{48CD690A-8198-4505-9D2D-FF653FDE1E34}
; ********************** END PER PROJECT ***********************

CompressionThreads=auto
VersionInfoVersion={#SelfFileVersion}
VersionInfoDescription="{#MyAppName} Setup"
AppName={#MyAppName}
AppVersion=1
;AppVersion={#ProjectVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
;no longer in program files - put it under the C drive
DefaultDirName={sd}\{#MyAppPublisher}\{#MyAppName}
DisableProgramGroupPage=yes
OutputBaseFilename={#MyAppNameNoSpace}
;_{#ProjectVersion}
;SetupIconFile={#MyIconPath}
Compression=lzma
SolidCompression=no
DiskSpanning=no
PrivilegesRequired=admin
ArchitecturesInstallIn64BitMode=x64
UninstallDisplayName={#MyAppName}
UninstallDisplayIcon={app}\{#MyAppExeName}

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked;
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Files]
Source: "{#MyAppFolder}\{#MyAppExeName}"; DestDir: "{app}\"; Flags: ignoreversion
Source: "{#MyAppFolder}\bin\*"; DestDir: "{app}\bin"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MyAppFolder}\bin_3rdparty\*"; DestDir: "{app}\bin_3rdparty"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MyAppFolder}\common\*"; DestDir: "{app}\common"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MyAppFolder}\configs\*"; DestDir: "{app}\configs"; Excludes: "General.json"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MyAppFolder}\configs\General - Template.json"; DestDir: "{app}\configs\"; DestName: "General.json"; Flags: ignoreversion 
Source: "{#MyAppFolder}\internals\*"; DestDir: "{app}\internals"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MyAppFolder}\langs\*"; DestDir: "{app}\langs"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MyAppFolder}\x64\*"; DestDir: "{app}\x64"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MyAppFolder}\*.exe"; DestDir: "{app}\"; Flags: ignoreversion 
Source: "{#MyAppFolder}\*.bat"; DestDir: "{app}\"; Flags: ignoreversion
Source: "{#MyAppFolder}\*.dll"; DestDir: "{app}\"; Flags: ignoreversion
Source: "{#MyAppFolder}\*.txt"; DestDir: "{app}\"; Flags: ignoreversion 
Source: "{#MyAppFolder}\*.bat"; DestDir: "{app}\"; Flags: ignoreversion 
;Source: "{#MyAppFolder}\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
;Source: "{#MyAppFolder}\BroadstoneCourt\Binaries\*"; DestDir: "{app}\BroadstoneCourt\Binaries\"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
; these are really shortcuts, not icons to load
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent runascurrentuser

